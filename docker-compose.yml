services:
  api:
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        - module=api
    env_file: .env
    ports:
      - "8081:8081"
    expose:
      - 8081
    restart: always
    depends_on:
      - mysql
      - rabbitmq
    volumes:
      - ./api:/app/api
      - ./shared:/app/shared
    networks:
      - sats
    command: ["./wait-for-it.sh", "rabbitmq:5672", "--", "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8081", "--reload"]

  worker:
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        - module=worker
    env_file: .env
    ports:
      - "8082:8082"
    expose:
      - 8082
    restart: always
    depends_on:
      - mysql
      - rabbitmq
      - api
    volumes:
      - ./worker:/app/worker
      - ./shared:/app/shared
    networks:
      - sats
    command: ["./wait-for-it.sh", "rabbitmq:5672", "--", "uvicorn", "worker.main:app", "--host", "0.0.0.0", "--port", "8082", "--reload"]

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
    - "5672:5672"
    - "15672:15672"
    expose:
      - 5672
      - 15672
    networks:
      - sats
  
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sentiment
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - sats

volumes:
  mysql_data:
    driver: local

networks:
  sats:
